# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: quikreads

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name : Checkout
        uses: actions/checkout@v2
      - name : Node Setup
        uses: actions/setup-node@v1
        with:
         node-version: '12.18'
      - run: npm ci
      - run: npm run build --prod
      - run:  npm run test-headless
      - run: npm audit fix
          
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: goliakshay357/quikreads-frontend:latest

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
        # Deploy to Netlify
#       - name: Deploy to Netlify
#         uses: nwtgck/actions-netlify@v1.1
#         with:
#           publish-dir: './dist/quikreads'
#           production-branch: master
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           deploy-message: "Deploy from GitHub Actions"
#           enable-pull-request-comment: false
#           enable-commit-comment: true
#           overwrites-pull-request-comment: true
#         env:
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#         timeout-minutes: 1
        
  lighthouse:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            https://quikreads.netlify.app/
            https://quikreads-data-entry.netlify.app/
          budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
